name: Construir, Enviar Imagens Docker e Fazer Deploy no Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Baixar o código do repositório
      - name: Baixar código do repositório
        uses: actions/checkout@v3

      # 2️⃣ Configurar Docker Buildx (para builds otimizados)
      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Fazer login no Docker Hub
      - name: Fazer login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4️⃣ Construir e enviar imagem do Frontend (Angular)
      - name: Construir e enviar imagem do Frontend (Angular)
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          tags: guisilva1k2k/frontend-ecommerce:dev
          no-cache: true
          pull: true

      # 5️⃣ Instalar kubectl (CLI do Kubernetes)
      - name: Instalar kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 6️⃣ Configurar credenciais de acesso ao Kubernetes
      - name: Configurar credenciais do Kubernetes
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          echo "✅ kubeconfig aplicado com sucesso!"
          kubectl cluster-info --insecure-skip-tls-verify || echo "⚠️ Aviso: verifique o acesso ao cluster"

      # 7️⃣ Aplicar os manifestos do Kubernetes (k8s/)
      - name: Aplicar manifestos do Kubernetes
        run: |
          echo "📦 Aplicando manifestos no cluster..."
          kubectl apply -k k8s --validate=false --insecure-skip-tls-verify
          echo "✅ Manifestos aplicados com sucesso!"

      # 8️⃣ Atualizar as imagens dos deployments
      - name: Atualizar imagens no Kubernetes
        run: |
          echo "🔁 Atualizando imagens no cluster..."
          kubectl set image deployment/backend app=pedrobrantis/backend:deploy -n app-demo --insecure-skip-tls-verify
          kubectl set image deployment/frontend web=guisilva1k2k/frontend-ecommerce:dev -n app-demo --insecure-skip-tls-verify
          echo "✅ Imagens atualizadas com sucesso!"

      # 9️⃣ Verificar o status dos deployments (garantir que subiram)
      - name: Verificar status dos deployments
        run: |
          echo "🕓 Aguardando os pods ficarem prontos..."
          kubectl rollout status deployment/backend -n app-demo --insecure-skip-tls-verify
          kubectl rollout status deployment/frontend -n app-demo --insecure-skip-tls-verify
          echo "✅ Deploy concluído com sucesso!"

      # 🔟 Mostrar URL pública do frontend
      - name: Mostrar URL pública
        run: |
          echo "🌐 Acesse o frontend em:"
          echo "👉 http://3.143.251.114:30080"